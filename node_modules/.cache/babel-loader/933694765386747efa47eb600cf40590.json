{"ast":null,"code":"import React, { Component } from 'react'; // import '../App.css';\n\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/signup.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nvar Twitter = require('twitter');\n\nconst express = require('express');\n\nconst server = express();\nserver.use(express.json());\nvar client = new Twitter({\n  consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n  consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n  bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n});\n\nclass TwitterComponent extends Component {\n  constructor() {\n    super();\n    this.showPassword = this.showPassword.bind(this);\n    this.state = {\n      fields: {},\n      errors: {},\n      hidden: true,\n      redirect: false,\n      accounts: []\n    };\n  }\n\n}\n\nexport default TwitterComponent;\nserver.get('/api/tweets/:keyword', function (request, response) {\n  var keyword = request.params.keyword;\n  client.get('search/tweets', {\n    q: keyword,\n    count: 50\n  }, function (error, data, response) {\n    if (error) {\n      console.log(\"Didn't work!\");\n    } else {\n      let statuses = data.statuses;\n\n      for (let i = 0; i < 50; i++) {\n        console.log(statuses[i].text);\n      }\n    }\n  });\n});\nserver.listen(5000, () => {\n  console.log(\"Connected to port 5000!\");\n});","map":{"version":3,"sources":["/home/john/AlfaFinal/frontend/src/components/tweets.js"],"names":["React","Component","Twitter","require","express","server","use","json","client","consumer_key","consumer_secret","bearer_token","TwitterComponent","constructor","showPassword","bind","state","fields","errors","hidden","redirect","accounts","get","request","response","keyword","params","q","count","error","data","console","log","statuses","i","text","listen"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,8BAAP;AACA,OAAO,0BAAP;AACA,OAAO,sCAAP;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,MAAM,GAAGD,OAAO,EAAtB;AACAC,MAAM,CAACC,GAAP,CAAWF,OAAO,CAACG,IAAR,EAAX;AAEA,IAAIC,MAAM,GAAG,IAAIN,OAAJ,CAAY;AACrBO,EAAAA,YAAY,EAAE,2BADO;AAErBC,EAAAA,eAAe,EAAE,oDAFI;AAGrBC,EAAAA,YAAY,EAAE;AAHO,CAAZ,CAAb;;AAMA,MAAMC,gBAAN,SAA+BX,SAA/B,CAAyC;AACxCY,EAAAA,WAAW,GAAG;AACb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE,EADI;AAEZC,MAAAA,MAAM,EAAE,EAFI;AAGZC,MAAAA,MAAM,EAAE,IAHI;AAIZC,MAAAA,QAAQ,EAAE,KAJE;AAKZC,MAAAA,QAAQ,EAAE;AALE,KAAb;AAOA;;AAXuC;;AAiBzC,eAAeT,gBAAf;AAEAP,MAAM,CAACiB,GAAP,CAAW,sBAAX,EAAmC,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC5D,MAAIC,OAAO,GAAGF,OAAO,CAACG,MAAR,CAAeD,OAA7B;AACAjB,EAAAA,MAAM,CAACc,GAAP,CAAW,eAAX,EAA4B;AAAEK,IAAAA,CAAC,EAAEF,OAAL;AAAcG,IAAAA,KAAK,EAAE;AAArB,GAA5B,EAAuD,UAAUC,KAAV,EAAiBC,IAAjB,EAAuBN,QAAvB,EAAiC;AACpF,QAAIK,KAAJ,EAAW;AACPE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,KAFD,MAEO;AACH,UAAIC,QAAQ,GAAGH,IAAI,CAACG,QAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzBH,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,CAAD,CAAR,CAAYC,IAAxB;AACH;AACJ;AACJ,GATD;AAUH,CAZD;AAcA9B,MAAM,CAAC+B,MAAP,CAAc,IAAd,EAAoB,MAAM;AACtBL,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACH,CAFD","sourcesContent":["import React, { Component } from 'react';\n// import '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/signup.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar Twitter = require('twitter');\nconst express = require('express');\nconst server = express();\nserver.use(express.json());\n\nvar client = new Twitter({\n    consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n    consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n    bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n});\n\nclass TwitterComponent extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.showPassword = this.showPassword.bind(this);\n\t\tthis.state = {\n\t\t\tfields: {},\n\t\t\terrors: {},\n\t\t\thidden: true,\n\t\t\tredirect: false,\n\t\t\taccounts: []\n\t\t};\n\t}\n\n\n\n}\n\nexport default TwitterComponent;\n\nserver.get('/api/tweets/:keyword', function (request, response) {\n    var keyword = request.params.keyword;\n    client.get('search/tweets', { q: keyword, count: 50 }, function (error, data, response) {\n        if (error) {\n            console.log(\"Didn't work!\")\n        } else {\n            let statuses = data.statuses;\n            for (let i = 0; i < 50; i++) {\n                console.log(statuses[i].text)\n            }\n        }\n    })\n});\n\nserver.listen(5000, () => {\n    console.log(\"Connected to port 5000!\");\n});"]},"metadata":{},"sourceType":"module"}