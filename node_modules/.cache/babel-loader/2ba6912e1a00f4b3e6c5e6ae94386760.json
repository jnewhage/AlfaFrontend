{"ast":null,"code":"var _jsxFileName = \"/home/john/AlfaFinal/frontend/src/components/change_password.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/login.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport avatar from \"../assets/images/avatar.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PasswordComponent extends Component {\n  constructor() {\n    super();\n    this.showPassword = this.showPassword.bind(this);\n    this.state = {\n      fields: {},\n      errors: {},\n      hidden: true,\n      redirect: false,\n      accounts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/change_password/').then(res => res.json()).then(data => {\n      this.setState(prevState => {\n        return {\n          accounts: data.info\n        };\n      });\n    });\n  } // postData(event) {\n  // \tevent.preventDefault();\n  // \tlet fields = this.state.fields;\n  // \tlet data = { email: fields[\"email\"], password: fields[\"password\"] };\n  // \tlet options = {\n  // \t\tmethod: 'post',\n  // \t\theaders: {\n  // \t\t\t'Content-Type': 'application/json'\n  // \t\t},\n  // \t\tbody: JSON.stringify(data)\n  // \t}\n  // \tfetch('http://localhost:3001/change_password/', options);\n  // }\n  // delData() {\n  //   let data = { brand: this.state.delBrand, model: this.state.delModel, year: this.state.delYear };\n  //   let options = {\n  //     method: 'delete',\n  //     headers: {\n  //       'Content-Type': 'application/json'\n  //     },\n  //     body: JSON.stringify(data)\n  //   }\n  //   fetch('http://localhost:3001/dealership/', options);\n  // }\n\n\n  updateData() {\n    let fields = this.state.fields;\n    let data = {\n      email: fields[\"email\"],\n      password: fields[\"password\"]\n    }; // let data = { brand: this.state.updateBrand, model: this.state.updateModel, year: this.state.updateYear, id: this.state.updateID };\n\n    let options = {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch('http://localhost:3001/change_password/', options);\n  }\n\n  getData() {\n    fetch('http://localhost:3001/change_password/').then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState(prevState => {\n        return {\n          accounts: data\n        };\n      } // I added the .info to data.info\n      );\n    });\n  } // handleChange(event) {\n  //   this.setState({ [event.target.name]: event.target.value });\n  // }\n\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n    this.getData(); // const name_filter = /^[a-zA-Z]+$/;\n\n    const email_filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/; // if (!fields[\"name\"]) {\n    // \tformIsValid = false;\n    // \terrors[\"name\"] = \"Cannot be empty\";\n    // }\n    // if (typeof fields[\"name\"] !== \"undefined\") {\n    // \tif (!name_filter.test(fields[\"name\"])) {\n    // \t\tformIsValid = false;\n    // \t\terrors[\"name\"] = \"Please enter a valid first name!\";\n    // \t\talert(\"Please enter a valid first name!\");\n    // \t}\n    // }\n    // Email\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      if (!email_filter.test(fields[\"email\"])) {\n        formIsValid = false;\n        errors[\"email\"] = \"Please enter a valid email!\";\n        alert(\"Please enter a valid email!\");\n      }\n    } // Password & confirm password\n\n\n    if (!fields[\"password\"]) {\n      formIsValid = false;\n      errors[\"password\"] = \"Cannot be empty\";\n    }\n\n    if (!fields[\"confirm_password\"]) {\n      formIsValid = false;\n      errors[\"confirm_password\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"password\"] !== \"undefined\" || typeof fields[\"confirm_password\"] !== \"undefined\") {\n      if (fields[\"password\"] !== fields[\"confirm_password\"]) {\n        formIsValid = false;\n        errors[\"password\"] = \"Password and Confirm Password don't Match!\";\n        errors[\"confirm_password\"] = \"Password and Confirm Password don't Match!\";\n        alert(\"Password and Confirm Password Don't Match!\");\n        this.clearFunc();\n      }\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\" || typeof fields[\"password\"] !== \"undefined\") {\n      this.state.accounts.map(account => {\n        let em = account.email;\n        let pw = account.password;\n\n        if (fields[\"email\"] === em && fields[\"password\"] === pw) {\n          formIsValid = true;\n        } else {\n          formIsValid = false;\n        }\n      });\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      this.updateData();\n      window.location = \"./home.js\";\n      alert(\"Thank you for signing up!\");\n    }\n  } // handleChange(field, e) {\n  // \tlet fields = this.state.fields;\n  // \tfields[field] = e.target.value;\n  // \tthis.setState({ fields });\n  // }\n\n\n  clearFunc() {\n    let fields = this.state.fields;\n    fields[\"password\"] = \"\";\n    fields[\"confirm_password\"] = \"\";\n    this.setState({\n      fields: fields\n    });\n  }\n\n  showPassword() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Change Account Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"./home.js\",\n          onSubmit: this.contactSubmit.bind(this),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatar,\n              alt: \"./assets/images/avatar.jpg\",\n              className: \"img-circle avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              refs: \"email\",\n              type: \"text\",\n              name: \"email\",\n              placeholder: \"Email\",\n              className: \"form-control\",\n              onChange: this.handleChange.bind(this, \"email\"),\n              value: this.state.fields[\"email\"],\n              required: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              refs: \"password\",\n              type: this.state.hidden ? 'password' : 'text',\n              name: \"password\",\n              placeholder: \"Password\",\n              className: \"form-control\",\n              onChange: this.handleChange.bind(this, \"password\"),\n              value: this.state.fields[\"password\"],\n              required: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              refs: \"confirm_password\",\n              type: this.state.hidden ? 'password' : 'text',\n              name: \"confirm_password\",\n              placeholder: \"Confirm Password\",\n              className: \"form-control\",\n              onChange: this.handleChange.bind(this, \"confirm_password\"),\n              value: this.state.fields[\"confirm_password\"],\n              required: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success btn-lg btn-block\",\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onClick: this.showPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 8\n            }, this), \"Show Password\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bot\",\n          children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./login.js\",\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 52\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 4\n    }, this) // Sign up template, https://www.tutorialrepublic.com/snippets/preview.php?topic=bootstrap&file=sign-up-form-with-icons\n    // I changed the formatting and added all my own regexp  \n    // I used this for the showPassword function\n    // https://edvins.io/show-and-hide-password-in-react\n    ;\n  }\n\n}\n\nexport default PasswordComponent;","map":{"version":3,"sources":["/home/john/AlfaFinal/frontend/src/components/change_password.js"],"names":["React","Component","avatar","PasswordComponent","constructor","showPassword","bind","state","fields","errors","hidden","redirect","accounts","componentDidMount","fetch","then","res","json","data","setState","prevState","info","updateData","email","password","options","method","headers","body","JSON","stringify","getData","console","log","handleChange","field","e","target","value","handleValidation","formIsValid","email_filter","test","alert","clearFunc","map","account","em","pw","contactSubmit","preventDefault","window","location","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/login.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport avatar from \"../assets/images/avatar.jpg\";\n\n\nclass PasswordComponent extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.showPassword = this.showPassword.bind(this);\n\t\tthis.state = {\n\t\t\tfields: {},\n\t\t\terrors: {},\n\t\t\thidden: true,\n\t\t\tredirect: false,\n\t\t\taccounts: []\n\t\t};\n\t}\n\n\n\tcomponentDidMount() {\n\t\tfetch('http://localhost:3001/change_password/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => { return { accounts: data.info } }\n\t\t\t\t)\n\t\t\t});\n\t}\n\n\t// postData(event) {\n\t// \tevent.preventDefault();\n\t// \tlet fields = this.state.fields;\n\n\t// \tlet data = { email: fields[\"email\"], password: fields[\"password\"] };\n\t// \tlet options = {\n\t// \t\tmethod: 'post',\n\t// \t\theaders: {\n\t// \t\t\t'Content-Type': 'application/json'\n\t// \t\t},\n\t// \t\tbody: JSON.stringify(data)\n\t// \t}\n\t// \tfetch('http://localhost:3001/change_password/', options);\n\t// }\n\n\t// delData() {\n\t//   let data = { brand: this.state.delBrand, model: this.state.delModel, year: this.state.delYear };\n\t//   let options = {\n\t//     method: 'delete',\n\t//     headers: {\n\t//       'Content-Type': 'application/json'\n\t//     },\n\t//     body: JSON.stringify(data)\n\t//   }\n\t//   fetch('http://localhost:3001/dealership/', options);\n\t// }\n\n\tupdateData() {\n\t\tlet fields = this.state.fields;\n\t\tlet data = { email: fields[\"email\"], password: fields[\"password\"] };\n\n\t\t// let data = { brand: this.state.updateBrand, model: this.state.updateModel, year: this.state.updateYear, id: this.state.updateID };\n\t\tlet options = {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}\n\t\tfetch('http://localhost:3001/change_password/', options);\n\t}\n\n\tgetData() {\n\t\tfetch('http://localhost:3001/change_password/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => { return { accounts: data } }  // I added the .info to data.info\n\t\t\t\t)\n\t\t\t});\n\t}\n\n\t// handleChange(event) {\n\t//   this.setState({ [event.target.name]: event.target.value });\n\t// }\n\n\n\thandleChange(field, e) {\n\t\tlet fields = this.state.fields;\n\t\tfields[field] = e.target.value;\n\t\tthis.setState({ fields });\n\t}\n\n\n\n\thandleValidation() {\n\t\tlet fields = this.state.fields;\n\t\tlet errors = {};\n\t\tlet formIsValid = true;\n\t\tthis.getData()\n\n\t\t// const name_filter = /^[a-zA-Z]+$/;\n\t\tconst email_filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n\n\n\t\t// if (!fields[\"name\"]) {\n\t\t// \tformIsValid = false;\n\t\t// \terrors[\"name\"] = \"Cannot be empty\";\n\t\t// }\n\n\t\t// if (typeof fields[\"name\"] !== \"undefined\") {\n\t\t// \tif (!name_filter.test(fields[\"name\"])) {\n\t\t// \t\tformIsValid = false;\n\t\t// \t\terrors[\"name\"] = \"Please enter a valid first name!\";\n\n\t\t// \t\talert(\"Please enter a valid first name!\");\n\t\t// \t}\n\t\t// }\n\n\t\t// Email\n\t\tif (!fields[\"email\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"email\"] = \"Cannot be empty\";\n\t\t}\n\n\t\tif (typeof fields[\"email\"] !== \"undefined\") {\n\t\t\tif (!email_filter.test(fields[\"email\"])) {\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[\"email\"] = \"Please enter a valid email!\";\n\n\t\t\t\talert(\"Please enter a valid email!\");\n\t\t\t}\n\t\t}\n\n\t\t// Password & confirm password\n\t\tif (!fields[\"password\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"password\"] = \"Cannot be empty\";\n\t\t}\n\t\tif (!fields[\"confirm_password\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"confirm_password\"] = \"Cannot be empty\";\n\t\t}\n\n\t\tif (typeof fields[\"password\"] !== \"undefined\" || typeof fields[\"confirm_password\"] !== \"undefined\") {\n\t\t\tif (fields[\"password\"] !== fields[\"confirm_password\"]) {\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[\"password\"] = \"Password and Confirm Password don't Match!\";\n\t\t\t\terrors[\"confirm_password\"] = \"Password and Confirm Password don't Match!\";\n\t\t\t\talert(\"Password and Confirm Password Don't Match!\");\n\t\t\t\tthis.clearFunc();\n\t\t\t}\n\t\t}\n\n\n\n\t\tif (typeof fields[\"email\"] !== \"undefined\" || typeof fields[\"password\"] !== \"undefined\") {\n\n\t\t\tthis.state.accounts.map((account) => {\n\t\t\t\tlet em = account.email;\n\t\t\t\tlet pw = account.password;\n\n\t\t\t\tif (fields[\"email\"] === em && fields[\"password\"] === pw) {\n\t\t\t\t\tformIsValid = true;\n\t\t\t\t} else {\n\t\t\t\t\tformIsValid = false;\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tthis.setState({ errors: errors });\n\t\treturn formIsValid;\n\t}\n\n\tcontactSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif (this.handleValidation()) {\n\t\t\tthis.updateData();\n\t\t\twindow.location = \"./home.js\";\n\t\t\talert(\"Thank you for signing up!\");\n\t\t}\n\n\t}\n\n\t// handleChange(field, e) {\n\t// \tlet fields = this.state.fields;\n\t// \tfields[field] = e.target.value;\n\t// \tthis.setState({ fields });\n\t// }\n\n\tclearFunc() {\n\t\tlet fields = this.state.fields;\n\n\t\tfields[\"password\"] = \"\";\n\t\tfields[\"confirm_password\"] = \"\";\n\n\t\tthis.setState({ fields: fields });\n\t}\n\n\tshowPassword() {\n\t\tthis.setState({ hidden: !this.state.hidden });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"main\">\n\t\t\t\t<div className=\"login-form\" align=\"center\">\n\t\t\t\t\t<h2>Change Account Password</h2>\n\t\t\t\t\t<form action=\"./home.js\" onSubmit={this.contactSubmit.bind(this)} >\n\t\t\t\t\t\t<div className=\"text-center\" align=\"center\">\n\t\t\t\t\t\t\t<img src={avatar} alt=\"./assets/images/avatar.jpg\" className=\"img-circle avatar\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{/* <div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref=\"name\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"First name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"name\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"name\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"email\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"email\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"password\"\n\t\t\t\t\t\t\t\ttype={this.state.hidden ? 'password' : 'text'}\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"password\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"password\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"confirm_password\"\n\t\t\t\t\t\t\t\ttype={this.state.hidden ? 'password' : 'text'}\n\t\t\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"confirm_password\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"confirm_password\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-success btn-lg btn-block\" >Change</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" onClick={this.showPassword} />Show Password\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"bot\">Already have an account? <a href=\"./login.js\">Sign in</a></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t// Sign up template, https://www.tutorialrepublic.com/snippets/preview.php?topic=bootstrap&file=sign-up-form-with-icons\n\t\t\t// I changed the formatting and added all my own regexp  \n\n\t\t\t// I used this for the showPassword function\n\t\t\t// https://edvins.io/show-and-hide-password-in-react\n\t\t)\n\n\t}\n}\n\nexport default PasswordComponent;"]},"metadata":{},"sourceType":"module"}