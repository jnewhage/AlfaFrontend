{"ast":null,"code":"var _jsxFileName = \"/home/john/AlfaTest/AlfaFinal/frontend/src/components/tweets.js\";\nimport React, { Component } from 'react'; // import '../App.css';\n\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/mechanics.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Twitter = require('twitter');\n\nconst TWITTER_BEARER_TOKEN = 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O';\nvar client = new Twitter({\n  consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n  consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n  bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n});\n\nclass TwitterComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // isAuthenticated: false,\n      // user: null,\n      // token: '',\n      accounts: []\n    };\n  } // let searchParam = { q: 'auto repair', count: 5 };\n  // // http://localhost:3000/tweets.js\n  // // client.get('search/tweets', searchParam, function (error, data, response) {\n  // client.get('search/tweets/', searchParam, function (error, data, response) {\n  //     alert(\"here\")\n  //     if (error) {\n  //         alert(\"doesn't work\")\n  //         console.log(\"Didn't work!\")\n  //     } else {\n  //         alert(\"works\")\n  //         let statuses = data.statuses;\n  //         for (let i = 0; i < 50; i++) {\n  //             console.log(statuses[i].text)\n  //             // response.send(data.statuses)\n  //         }\n  //         // statuses.map((el)=>{console.log(el.text)})\n  //         // console.log(statuses);\n  //     }\n  //     // console.log(data.statuses)\n  // })\n\n\n  componentDidMount() {\n    fetch('http://localhost:3001/tweets/').then(res => res.json()).then(data => {\n      this.setState(prevState => {\n        return {\n          accounts: data.info\n        };\n      });\n    });\n  }\n\n  getData() {\n    fetch('http://localhost:3001/tweets/').then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState(prevState => {\n        return {\n          accounts: data\n        };\n      });\n    });\n  }\n\n  render() {\n    this.getData.bind(); // let x = this.twitter();\n    // alert(x)\n    // let content = !!this.state.isAuthenticated ?\n    // (\n    //   <div>\n    //     <p>Authenticated</p>\n    //     <div>\n    //       {this.state.user.email}\n    //     </div>\n    //     <div>\n    //       <button onClick={this.logout} className=\"button\" >\n    //         Log out\n    //       </button>\n    //     </div>\n    //   </div>\n    // ) :\n    // (\n    //   <TwitterLogin loginUrl=\"http://localhost:4000/api/v1/auth/twitter\"\n    //                 onFailure={this.onFailed} onSuccess={this.onSuccess}\n    //                 requestTokenUrl=\"http://localhost:4000/api/v1/auth/twitter/reverse\"/>\n    // );\n\n    console.log(this.state.accounts.statuses.text);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        align: \"center\",\n        children: \"Other Reviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        style: {\n          marginTop: \"2em\",\n          marginLeft: \"40em\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-child purple\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card  card-default\",\n            id: \"card_contacts\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"contacts\",\n              className: \"panel-collapse collapse show\",\n              \"aria-expanded\": \"true\",\n              children: [this.state.accounts.map(items => /*#__PURE__*/_jsxDEV(\"span\", {\n                body: true,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"price\",\n                    children: [\"s\", items.statuses.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"price\",\n                    children: [\"a\", items.body]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)\n              }, items.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 69\n              }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-group pull-down\",\n                id: \"contact-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row w-150\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row w-150\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row w-150\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"list-group-item\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row w-150\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TwitterComponent; // client.get('search/tweets', searchParam, function (error, data, response) {\n// let searchParam = { q: 'hat', count: 50 };\n// server.get('/api/tweets/:auto%20repair', function (request, response) {\n//     var keyword = request.params.keyword;\n//     client.get('search/tweets', { q: keyword, count: 50 }, function (error, data, response) {\n//         if (error) {\n//             console.log(\"Didn't work!\")\n//         } else {\n//             let statuses = data.statuses;\n//             for (let i = 0; i < 50; i++) {\n//                 console.log(statuses[i].text)\n//             }\n//         }\n//     })\n// });\n// server.listen(5000, () => {\n//     console.log(\"Connected to port 5000!\");\n// });","map":{"version":3,"sources":["/home/john/AlfaTest/AlfaFinal/frontend/src/components/tweets.js"],"names":["React","Component","Twitter","require","TWITTER_BEARER_TOKEN","client","consumer_key","consumer_secret","bearer_token","TwitterComponent","constructor","state","accounts","componentDidMount","fetch","then","res","json","data","setState","prevState","info","getData","console","log","render","bind","statuses","text","marginTop","marginLeft","map","items","body","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,8BAAP;AACA,OAAO,6BAAP;AACA,OAAO,sCAAP;;;AACA,IAAIC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;;AAGA,MAAMC,oBAAoB,GAAG,kHAA7B;AAGA,IAAIC,MAAM,GAAG,IAAIH,OAAJ,CAAY;AACrBI,EAAAA,YAAY,EAAE,2BADO;AAErBC,EAAAA,eAAe,EAAE,oDAFI;AAGrBC,EAAAA,YAAY,EAAE;AAHO,CAAZ,CAAb;;AAMA,MAAMC,gBAAN,SAA+BR,SAA/B,CAAyC;AACrCS,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACT;AACA;AACA;AACAC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAMH,GAToC,CAYrC;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAGAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,WAAKC,QAAL,CACKC,SAAD,IAAe;AAAE,eAAO;AAAER,UAAAA,QAAQ,EAAEM,IAAI,CAACG;AAAjB,SAAP;AAAgC,OADrD;AAGH,KANL;AAOH;;AAEDC,EAAAA,OAAO,GAAG;AACNR,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVK,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,WAAKC,QAAL,CACKC,SAAD,IAAe;AAAE,eAAO;AAAER,UAAAA,QAAQ,EAAEM;AAAZ,SAAP;AAA2B,OADhD;AAGH,KAPL;AAQH;;AAGDO,EAAAA,MAAM,GAAG;AACL,SAAKH,OAAL,CAAaI,IAAb,GADK,CAIL;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAX,CAAoBe,QAApB,CAA6BC,IAAzC;AAEA,wBACI;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,8BACI;AAAI,QAAA,KAAK,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,KAAb;AAAoBC,UAAAA,UAAU,EAAE;AAAhC,SAAvC;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAoC,YAAA,EAAE,EAAC,eAAvC;AAAA,mCACI;AAAK,cAAA,EAAE,EAAC,UAAR;AAAmB,cAAA,SAAS,EAAC,8BAA7B;AAA4D,+BAAc,MAA1E;AAAA,yBACK,KAAKnB,KAAL,CAAWC,QAAX,CAAoBmB,GAApB,CAAyBC,KAAD,iBAAW;AAAqB,gBAAA,IAAI,MAAzB;AAAA,uCAChC;AAAK,kBAAA,SAAS,EAAC,MAAf;AAAA,0CACI;AAAM,oBAAA,SAAS,EAAC,OAAhB;AAAA,oCAA0BA,KAAK,CAACL,QAAN,CAAeC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAM,oBAAA,SAAS,EAAC,OAAhB;AAAA,oCAA0BI,KAAK,CAACC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADgC,iBAAWD,KAAK,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA,sBAAnC,CADL,eAUI;AAAI,gBAAA,SAAS,EAAC,sBAAd;AAAqC,gBAAA,EAAE,EAAC,cAAxC;AAAA,wCAEI;AAAI,kBAAA,SAAS,EAAC,iBAAd;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAQI;AAAI,kBAAA,SAAS,EAAC,iBAAd;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBARJ,eAeI;AAAI,kBAAA,SAAS,EAAC,iBAAd;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAfJ,eAsBI;AAAI,kBAAA,SAAS,EAAC,iBAAd;AAAA,yCACI;AAAK,oBAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqDH;;AAhJoC;;AAoJzC,eAAezB,gBAAf,C,CAQA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\n// import '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/mechanics.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar Twitter = require('twitter');\n\n\nconst TWITTER_BEARER_TOKEN = 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O';\n\n\nvar client = new Twitter({\n    consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n    consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n    bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n});\n\nclass TwitterComponent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            // isAuthenticated: false,\n            // user: null,\n            // token: '',\n            accounts: []\n        };\n    }\n\n\n    // let searchParam = { q: 'auto repair', count: 5 };\n    // // http://localhost:3000/tweets.js\n    // // client.get('search/tweets', searchParam, function (error, data, response) {\n\n    // client.get('search/tweets/', searchParam, function (error, data, response) {\n    //     alert(\"here\")\n\n    //     if (error) {\n    //         alert(\"doesn't work\")\n\n    //         console.log(\"Didn't work!\")\n    //     } else {\n    //         alert(\"works\")\n\n    //         let statuses = data.statuses;\n    //         for (let i = 0; i < 50; i++) {\n    //             console.log(statuses[i].text)\n    //             // response.send(data.statuses)\n\n    //         }\n    //         // statuses.map((el)=>{console.log(el.text)})\n    //         // console.log(statuses);\n    //     }\n    //     // console.log(data.statuses)\n\n    // })\n\n\n    componentDidMount() {\n        fetch('http://localhost:3001/tweets/')\n            .then(res => res.json())\n            .then(data => {\n                this.setState(\n                    (prevState) => { return { accounts: data.info } }\n                )\n            });\n    }\n\n    getData() {\n        fetch('http://localhost:3001/tweets/')\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                this.setState(\n                    (prevState) => { return { accounts: data } }\n                )\n            });\n    }\n\n\n    render() {\n        this.getData.bind();\n\n\n        // let x = this.twitter();\n        // alert(x)\n\n\n        // let content = !!this.state.isAuthenticated ?\n        // (\n        //   <div>\n        //     <p>Authenticated</p>\n        //     <div>\n        //       {this.state.user.email}\n        //     </div>\n        //     <div>\n        //       <button onClick={this.logout} className=\"button\" >\n        //         Log out\n        //       </button>\n        //     </div>\n        //   </div>\n        // ) :\n        // (\n        //   <TwitterLogin loginUrl=\"http://localhost:4000/api/v1/auth/twitter\"\n        //                 onFailure={this.onFailed} onSuccess={this.onSuccess}\n        //                 requestTokenUrl=\"http://localhost:4000/api/v1/auth/twitter/reverse\"/>\n        // );\n        console.log(this.state.accounts.statuses.text)\n\n        return (\n            <div id=\"main\">\n                <h1 align=\"center\" >Other Reviews</h1>\n\n                <div className=\"grid-container\" style={{ marginTop: \"2em\", marginLeft: \"40em\" }}>\n                    <div className=\"grid-child purple\">\n                        <div className=\"card  card-default\" id=\"card_contacts\">\n                            <div id=\"contacts\" className=\"panel-collapse collapse show\" aria-expanded=\"true\">\n                                {this.state.accounts.map((items) => <span key={items.id} body>\n                                    <div className=\"item\">\n                                        <span className=\"price\">s{items.statuses.text}</span>\n                                        <span className=\"price\">a{items.body}</span>\n                                        {/* <p className=\"item-name\">{items.description}</p> */}\n                                    </div>\n                                </span>)}\n     \n\n                                <ul className=\"list-group pull-down\" id=\"contact-list\" >\n\n                                    <li className=\"list-group-item\">\n                                        <div className=\"row w-150\">\n\n\n                                        </div>\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        <div className=\"row w-150\">\n\n\n                                        </div>\n                                    </li>\n\n                                    <li className=\"list-group-item\">\n                                        <div className=\"row w-150\">\n\n\n\n                                        </div>\n                                    </li>\n                                    <li className=\"list-group-item\">\n                                        <div className=\"row w-150\">\n\n\n\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default TwitterComponent;\n\n\n\n\n\n\n\n// client.get('search/tweets', searchParam, function (error, data, response) {\n\n// let searchParam = { q: 'hat', count: 50 };\n\n// server.get('/api/tweets/:auto%20repair', function (request, response) {\n//     var keyword = request.params.keyword;\n//     client.get('search/tweets', { q: keyword, count: 50 }, function (error, data, response) {\n//         if (error) {\n//             console.log(\"Didn't work!\")\n//         } else {\n//             let statuses = data.statuses;\n//             for (let i = 0; i < 50; i++) {\n//                 console.log(statuses[i].text)\n//             }\n//         }\n//     })\n// });\n\n// server.listen(5000, () => {\n//     console.log(\"Connected to port 5000!\");\n// });"]},"metadata":{},"sourceType":"module"}