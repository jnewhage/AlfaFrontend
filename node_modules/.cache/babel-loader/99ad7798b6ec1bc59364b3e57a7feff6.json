{"ast":null,"code":"var _jsxFileName = \"/home/john/AlfaFinal/frontend/src/components/login.js\";\nimport React, { Component } from 'react';\nimport '../App.css'; // import $ from 'jquery';\n\nimport '../assets/css/login.css';\nimport '../assets/css/alfa_style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport avatar from \"../assets/images/avatar.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor() {\n    super();\n    this.showPassword = this.showPassword.bind(this);\n    this.state = {\n      fields: {},\n      errors: {},\n      hidden: true,\n      redirect: false,\n      accounts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/login/').then(res => res.json()).then(data => {\n      this.setState(prevState => {\n        return {\n          accounts: data.info\n        };\n      });\n    });\n  }\n\n  getData() {\n    console.log(\"oi\");\n    fetch('http://localhost:3001/login/').then(res => res.json()).then(data => {\n      console.log(data);\n      this.setState(prevState => {\n        return {\n          accounts: data\n        };\n      } // I added the .info to data.info\n      );\n    });\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({\n      fields\n    });\n  } // componentDidMount() {\n  //   var id = this.getCookie(\"id\");\n  //   var pass = this.getCookie(\"pass\");\n  //   if (id && pass) {\n  //     document.getElementById(\"email\").value = id;\n  //     document.getElementById(\"password\").value = pass;\n  //     $(\"#myCheck\").prop(\"checked\", true);\n  //   } else {\n  //     this.deleteCookie(\"pass\");\n  //     this.deleteCookie(\"id\");\n  //     this.clearFunc();\n  //     $(\"#myCheck\").prop(\"checked\", false);\n  //   }\n  // }\n  //Reset input fields\n\n\n  clearFunc() {\n    let fields = this.state.fields;\n    fields[\"email\"] = \"\";\n    fields[\"password\"] = \"\";\n    this.setState({\n      fields: fields\n    });\n  } // Remember Input fields\n\n\n  setRememberChkBox() {\n    if (this.getCookie(\"id\") != null && this.getCookie(\"pass\") != null) {\n      this.deleteCookie(\"pass\");\n      this.deleteCookie(\"id\");\n      this.clearFunc();\n    }\n  } // Show the password\n\n\n  showPassword() {\n    this.setState({\n      hidden: !this.state.hidden\n    });\n  } // delete individual cookies\n\n\n  deleteCookie(name) {\n    // Set expire to an older date\n    document.cookie = name + \"= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n  } // Set individual cookies\n\n\n  setCookie(name, value, days) {\n    var expires = \"\";\n\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n      expires = \"; expires=\" + date.toUTCString();\n    }\n\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  } // Get individual cookies\n\n\n  getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n\n    return null;\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = false;\n    this.getData();\n    console.log(\"h:\", this.state.accounts);\n\n    if (typeof fields[\"email\"] !== \"undefined\" || typeof fields[\"password\"] !== \"undefined\") {\n      this.state.accounts.map(account => {\n        let em = account.email;\n        let pw = account.password;\n        console.log(\"em: \", em);\n        console.log(\"pw: \", pw);\n\n        if (fields[\"email\"] === em && fields[\"password\"] === pw) {\n          formIsValid = true;\n        } else {\n          formIsValid = false;\n        }\n      });\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      window.location = \"./home.js\";\n      alert(\"You have successfully logged in!\");\n    } else {\n      window.location = \"./login.js\";\n      alert(\"You have typed either the wrong email or password!\");\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign in to Your Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"./home.js\",\n          onSubmit: this.contactSubmit.bind(this),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatar,\n              alt: \"./assets/images/avatar.jpg\",\n              className: \"img-circle avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ref: \"email\",\n              name: \"email\",\n              type: \"text\",\n              className: \"form-control\",\n              placeholder: \"Enter email\",\n              onChange: this.handleChange.bind(this, \"email\"),\n              value: this.state.fields[\"email\"],\n              required: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ref: \"password\",\n              name: \"password\",\n              type: this.state.hidden ? 'password' : 'text',\n              className: \"form-control\",\n              placeholder: \"Enter password\",\n              onChange: this.handleChange.bind(this, \"password\"),\n              value: this.state.fields[\"password\"],\n              required: \"required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            align: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success btn-lg btn-block\",\n              children: \"Sign in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"reset\",\n              className: \"btn btn-primary btn-block\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: this.showPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), \"Show Password\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: \"0\",\n            onClick: this.setRememberChkBox(),\n            id: \"myCheck\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), \"Remember\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"valid\",\n            children: [\"User Name : guest@gmail.com\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 65\n            }, this), \"Password : guest\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          align: \"center\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"signup.js\",\n            children: \"Create an Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/john/AlfaFinal/frontend/src/components/login.js"],"names":["React","Component","avatar","LoginComponent","constructor","showPassword","bind","state","fields","errors","hidden","redirect","accounts","componentDidMount","fetch","then","res","json","data","setState","prevState","info","getData","console","log","handleChange","field","e","target","value","clearFunc","setRememberChkBox","getCookie","deleteCookie","name","document","cookie","setCookie","days","expires","date","Date","setTime","getTime","toUTCString","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","handleValidation","formIsValid","map","account","em","email","pw","password","contactSubmit","preventDefault","window","location","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\n// import $ from 'jquery';\nimport '../assets/css/login.css';\nimport '../assets/css/alfa_style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport avatar from \"../assets/images/avatar.jpg\";\n\n\nclass LoginComponent extends Component {\n  constructor() {\n    super();\n    this.showPassword = this.showPassword.bind(this);\n    this.state = {\n      fields: {},\n      errors: {},\n      hidden: true,\n      redirect: false,\n      accounts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/login/')\n      .then(res => res.json())\n      .then(data => {\n        this.setState(\n          (prevState) => { return { accounts: data.info } }\n        )\n      });\n  }\n\n  getData() {\n    console.log(\"oi\");\n    fetch('http://localhost:3001/login/')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState(\n          (prevState) => { return { accounts: data } }  // I added the .info to data.info\n        )\n      });\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({ fields });\n  }\n\n\n\n  // componentDidMount() {\n  //   var id = this.getCookie(\"id\");\n  //   var pass = this.getCookie(\"pass\");\n\n  //   if (id && pass) {\n  //     document.getElementById(\"email\").value = id;\n  //     document.getElementById(\"password\").value = pass;\n  //     $(\"#myCheck\").prop(\"checked\", true);\n\n  //   } else {\n  //     this.deleteCookie(\"pass\");\n  //     this.deleteCookie(\"id\");\n  //     this.clearFunc();\n  //     $(\"#myCheck\").prop(\"checked\", false);\n  //   }\n  // }\n\n  //Reset input fields\n  clearFunc() {\n    let fields = this.state.fields;\n\n    fields[\"email\"] = \"\";\n    fields[\"password\"] = \"\";\n\n    this.setState({ fields: fields });\n  }\n\n  // Remember Input fields\n  setRememberChkBox() {\n    if (this.getCookie(\"id\") != null && this.getCookie(\"pass\") != null) {\n      this.deleteCookie(\"pass\");\n      this.deleteCookie(\"id\");\n      this.clearFunc();\n    }\n  }\n\n  // Show the password\n  showPassword() {\n    this.setState({ hidden: !this.state.hidden });\n  }\n\n  // delete individual cookies\n  deleteCookie(name) {\n    // Set expire to an older date\n    document.cookie = name + \"= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n  }\n\n  // Set individual cookies\n  setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  }\n\n  // Get individual cookies\n  getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = false;\n    this.getData()\n    console.log(\"h:\", this.state.accounts);\n\n    if (typeof fields[\"email\"] !== \"undefined\" || typeof fields[\"password\"] !== \"undefined\") {\n\n      this.state.accounts.map((account) => {\n        let em = account.email;\n        let pw = account.password;\n        console.log(\"em: \", em);\n        console.log(\"pw: \", pw);\n        if (fields[\"email\"] === em && fields[\"password\"] === pw) {\n          formIsValid = true;\n        } else {\n          formIsValid = false;\n        }\n      })\n    }\n\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      window.location = \"./home.js\";\n      alert(\"You have successfully logged in!\");\n    } else {\n      window.location = \"./login.js\";\n      alert(\"You have typed either the wrong email or password!\")\n    }\n\n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n        <div className=\"login-form\">\n          <h2>Sign in to Your Account</h2>\n          <form action=\"./home.js\" onSubmit={this.contactSubmit.bind(this)} >\n            <div className=\"text-center\" align=\"center\">\n              <img src={avatar} alt=\"./assets/images/avatar.jpg\" className=\"img-circle avatar\" />\n            </div>\n\n            <div className=\"form-group\" align=\"center\">\n              <input\n                ref=\"email\"\n                name=\"email\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n                onChange={this.handleChange.bind(this, \"email\")}\n                value={this.state.fields[\"email\"]}\n                required=\"required\" />\n\n              <input\n                ref=\"password\"\n                name=\"password\"\n                type={this.state.hidden ? 'password' : 'text'}\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                onChange={this.handleChange.bind(this, \"password\")}\n                value={this.state.fields[\"password\"]}\n                required=\"required\" />\n            </div>\n\n            <div className=\"form-group\" align=\"center\">\n              <button type=\"submit\" className=\"btn btn-success btn-lg btn-block\" >Sign in</button>\n              <button type=\"reset\" className=\"btn btn-primary btn-block\" >Reset</button>\n            </div>\n            <input type=\"checkbox\" onClick={this.showPassword} />Show Password\n            <br />\n            <input type=\"checkbox\" value=\"0\" onClick={this.setRememberChkBox()} id=\"myCheck\" />Remember\n          </form>\n          <span><b className=\"valid\">User Name : guest@gmail.com<br />Password : guest</b></span>\n          <p className=\"text-center\" align=\"center\"><a href=\"signup.js\">Create an Account</a></p>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}