{"ast":null,"code":"// import React, { Component } from 'react';\n// // import '../App.css';\n// import '../assets/css/alfa_style.css';\n// import '../assets/css/signup.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// var Twitter = require('twitter');\n// const express = require('express');\n// const server = express();\n// server.use(express.json());\n// var client = new Twitter({\n//     consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n//     consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n//     bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n// });\n// class TwitterComponent extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             accounts: []\n//         };\n//     }\n// }\n// export default TwitterComponent;\n// let searchParam = { q: 'auto repair', count: 5 };\n// client.get('search/tweets', searchParam, function (error, data, response) {\n//     if (error) {\n//         console.log(\"Didn't work!\")\n//     } else {\n//         let statuses = data.statuses;\n//         for (let i=0; i<50;i++){\n//             console.log(statuses[i].text)\n//         }\n//         // statuses.map((el)=>{console.log(el.text)})\n//         // console.log(statuses);\n//     }\n// })\n// // client.get('search/tweets', searchParam, function (error, data, response) {\n// // let searchParam = { q: 'hat', count: 50 };\n// // server.get('/api/tweets/:auto%20repair', function (request, response) {\n// //     var keyword = request.params.keyword;\n// //     client.get('search/tweets', { q: keyword, count: 50 }, function (error, data, response) {\n// //         if (error) {\n// //             console.log(\"Didn't work!\")\n// //         } else {\n// //             let statuses = data.statuses;\n// //             for (let i = 0; i < 50; i++) {\n// //                 console.log(statuses[i].text)\n// //             }\n// //         }\n// //     })\n// // });\n// // server.listen(5000, () => {\n// //     console.log(\"Connected to port 5000!\");\n// // });","map":{"version":3,"sources":["/home/john/AlfaTest/AlfaFinal/frontend/src/components/tweets.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["// import React, { Component } from 'react';\n// // import '../App.css';\n// import '../assets/css/alfa_style.css';\n// import '../assets/css/signup.css';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// var Twitter = require('twitter');\n// const express = require('express');\n// const server = express();\n// server.use(express.json());\n\n// var client = new Twitter({\n//     consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n//     consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n//     bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n// });\n\n// class TwitterComponent extends Component {\n//     constructor() {\n//         super();\n//         this.state = {\n//             accounts: []\n//         };\n//     }\n\n\n\n// }\n\n// export default TwitterComponent;\n\n\n\n// let searchParam = { q: 'auto repair', count: 5 };\n// client.get('search/tweets', searchParam, function (error, data, response) {\n//     if (error) {\n//         console.log(\"Didn't work!\")\n//     } else {\n//         let statuses = data.statuses;\n//         for (let i=0; i<50;i++){\n//             console.log(statuses[i].text)\n//         }\n//         // statuses.map((el)=>{console.log(el.text)})\n//         // console.log(statuses);\n//     }\n// })\n\n\n// // client.get('search/tweets', searchParam, function (error, data, response) {\n\n// // let searchParam = { q: 'hat', count: 50 };\n\n// // server.get('/api/tweets/:auto%20repair', function (request, response) {\n// //     var keyword = request.params.keyword;\n// //     client.get('search/tweets', { q: keyword, count: 50 }, function (error, data, response) {\n// //         if (error) {\n// //             console.log(\"Didn't work!\")\n// //         } else {\n// //             let statuses = data.statuses;\n// //             for (let i = 0; i < 50; i++) {\n// //                 console.log(statuses[i].text)\n// //             }\n// //         }\n// //     })\n// // });\n\n// // server.listen(5000, () => {\n// //     console.log(\"Connected to port 5000!\");\n// // });"]},"metadata":{},"sourceType":"module"}