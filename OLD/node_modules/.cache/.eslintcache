[{"/home/john/class24/classtwentythree/frontend/src/index.js":"1","/home/john/class24/classtwentythree/frontend/src/App.js":"2","/home/john/class24/classtwentythree/frontend/src/reportWebVitals.js":"3"},{"size":500,"mtime":1619380179000,"results":"4","hashOfConfig":"5"},{"size":4821,"mtime":1619469889882,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1619380179000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"epauw4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/john/class24/classtwentythree/frontend/src/index.js",[],["16","17"],"/home/john/class24/classtwentythree/frontend/src/App.js",["18","19"],"\nimport React,{useEffect, useState} from 'react';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dealer: [],\n      tempBrand: \"\",\n      tempModel: \"\",\n      tempYear: 0,\n      delBrand: \"\",\n      delModel: \"\",\n      delYear: 0,\n      updateBrand: \"\",\n      updateModel: \"\",\n      updateYear: 0,\n      updateID: 0\n    }\n  }\n\n  componentDidMount(){\n    fetch('http://localhost:3001/dealership/')\n      .then(res => res.json())\n      .then(data => {\n        this.setState(\n          (prevState) => { return { dealer: data.info } }\n        )\n      });\n  }\n  postData(event){\n    event.preventDefault();\n    let data =  {brand: this.state.tempBrand, model: this.state.tempModel, year: this.state.tempYear};\n    let options ={\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }\n    fetch('http://localhost:3001/dealership/', options);\n  }\n  delData(){\n    let data =  {brand: this.state.delBrand, model: this.state.delModel, year: this.state.delYear};\n    let options ={\n      method: 'delete',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }\n    fetch('http://localhost:3001/dealership/', options);\n    \n  }\n  updateData(){\n    let data =  {brand: this.state.updateBrand, model: this.state.updateModel, year: this.state.updateYear, id: this.state.updateID};\n    let options ={\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }\n    fetch('http://localhost:3001/dealership/', options);\n    \n  }\n  getData() {\n    fetch('http://localhost:3001/dealership/')\n      .then(res => res.json())\n      .then(data => {console.log(data);\n        this.setState(\n          (prevState) => { return { dealer: data.info } }  // I added the .info to data.info\n        )\n      });\n  }\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <h1>Post a Record</h1>\n        <form onSubmit={(e)=>{this.postData(e)}}>\n\n          Enter Brand:\n          <input type=\"text\" name=\"tempBrand\" value={this.state.tempBrand} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Model:\n          <input type=\"text\" name=\"tempModel\" value={this.state.tempModel} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Year:\n          <input type=\"text\" name=\"tempYear\" value={this.state.tempYear} onChange={(e)=>{this.handleChange(e)}}></input>\n          <input type=\"submit\" value=\"Submit\"></input>\n\n        </form>\n        \n        \n        <h1>Delete a Record</h1>\n        <form onSubmit={()=>{this.delData()}}>\n          \n          Enter Brand:\n          <input type=\"text\" name=\"delBrand\" value={this.state.delBrand} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Model:\n          <input type=\"text\" name=\"delModel\" value={this.state.delModel} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Year:\n          <input type=\"text\" name=\"delYear\" value={this.state.delYear} onChange={(e)=>{this.handleChange(e)}}></input>\n          <input type=\"submit\" value=\"Submit\"></input>\n\n        </form> \n        <h1>Update a Record</h1>\n        <form onSubmit={()=>{this.updateData()}}>\n          Enter ID:\n          <input type=\"text\" name=\"updateID\" value={this.state.updateID} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Brand:\n          <input type=\"text\" name=\"updateBrand\" value={this.state.updateBrand} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Model:\n          <input type=\"text\" name=\"updateModel\" value={this.state.updateModel} onChange={(e)=>{this.handleChange(e)}}></input>\n          Enter Year:\n          <input type=\"text\" name=\"updateYear\" value={this.state.updateYear} onChange={(e)=>{this.handleChange(e)}}></input>\n          <input type=\"submit\" value=\"Submit\"></input>\n\n        </form> \n        <button onClick={() => this.getData()}>Press me to update!</button>\n        <ol>\n          {this.state.dealer.map((car) =>\n            <li key = {car.id}>{car.year}, {car.brand} {car.model}</li>)}\n        </ol>\n      </div>\n    );\n  }\n}\n\n\n// function App(){\n//   let[dealer,setDealer] = useState([]);\n\n//   useEffect(()=>{\n//     fetch('http://localhost:3001/dealership/')\n//       .then(res => res.json())\n//       .then(data => {\n//           setDealer(data)\n//       });\n//   });\n\n//   return (\n//   <div className=\"App\">\n//     <button onClick={() => this.getData()}>Press me to get!</button>\n//     <ol>\n//       {this.state.dealer.map((car) =>\n//         <li key = {car.id}>{car.year}, {car.brand} {car.model}</li>)}\n//     </ol>\n//      \n//   </div>\n// );\n// }\nexport default App;\n","/home/john/class24/classtwentythree/frontend/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":2,"column":15,"nodeType":"26","messageId":"27","endLine":2,"endColumn":24},{"ruleId":"24","severity":1,"message":"28","line":2,"column":26,"nodeType":"26","messageId":"27","endLine":2,"endColumn":34},"no-native-reassign",["29"],"no-negated-in-lhs",["30"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]