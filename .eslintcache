[{"/home/john/AlfaFinal/frontend/src/index.js":"1","/home/john/AlfaFinal/frontend/src/App.js":"2","/home/john/AlfaFinal/frontend/src/reportWebVitals.js":"3","/home/john/AlfaFinal/frontend/src/components/signup.js":"4","/home/john/AlfaFinal/frontend/src/components/login.js":"5","/home/john/AlfaFinal/frontend/src/components/home.js":"6","/home/john/AlfaFinal/frontend/src/components/alfa_parts.js":"7","/home/john/AlfaFinal/frontend/src/components/GTV6_parts.js":"8","/home/john/AlfaFinal/frontend/src/components/milano_parts.js":"9","/home/john/AlfaFinal/frontend/src/components/electrical.js":"10","/home/john/AlfaFinal/frontend/src/components/engine.js":"11","/home/john/AlfaFinal/frontend/src/components/brakes.js":"12","/home/john/AlfaFinal/frontend/src/js/footer.js":"13","/home/john/AlfaFinal/frontend/src/js/login.js":"14","/home/john/AlfaFinal/frontend/src/js/header.js":"15","/home/john/AlfaFinal/frontend/src/components/checkout.js":"16","/home/john/AlfaFinal/frontend/src/components/mechanics.js":"17","/home/john/AlfaFinal/frontend/src/components/change_password.js":"18","/home/john/AlfaFinal/frontend/src/components/cart.js":"19","/home/john/AlfaFinal/frontend/src/components/tweets.js":"20"},{"size":257,"mtime":1619380057319,"results":"21","hashOfConfig":"22"},{"size":5614,"mtime":1620583904682,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1617294775665,"results":"24","hashOfConfig":"22"},{"size":6117,"mtime":1620428577335,"results":"25","hashOfConfig":"22"},{"size":5935,"mtime":1620428973273,"results":"26","hashOfConfig":"22"},{"size":2446,"mtime":1619030868191,"results":"27","hashOfConfig":"22"},{"size":2632,"mtime":1619028400740,"results":"28","hashOfConfig":"22"},{"size":2636,"mtime":1619028609800,"results":"29","hashOfConfig":"22"},{"size":2640,"mtime":1619028980345,"results":"30","hashOfConfig":"22"},{"size":8448,"mtime":1620429064417,"results":"31","hashOfConfig":"22"},{"size":8396,"mtime":1620508192036,"results":"32","hashOfConfig":"22"},{"size":8532,"mtime":1620502720473,"results":"33","hashOfConfig":"22"},{"size":469,"mtime":1618437647995,"results":"34","hashOfConfig":"22"},{"size":660,"mtime":1619797514884,"results":"35","hashOfConfig":"22"},{"size":887,"mtime":1620430370214,"results":"36","hashOfConfig":"22"},{"size":12668,"mtime":1620504469663,"results":"37","hashOfConfig":"22"},{"size":9056,"mtime":1620518515652,"results":"38","hashOfConfig":"22"},{"size":6649,"mtime":1620167869582,"results":"39","hashOfConfig":"22"},{"size":2954,"mtime":1620515211655,"results":"40","hashOfConfig":"22"},{"size":1903,"mtime":1620584157818,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"5vqh9s",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},"/home/john/AlfaFinal/frontend/src/index.js",[],["88","89"],"/home/john/AlfaFinal/frontend/src/App.js",[],"/home/john/AlfaFinal/frontend/src/reportWebVitals.js",[],"/home/john/AlfaFinal/frontend/src/components/signup.js",["90","91","92","93"],"import React, { Component } from 'react';\nimport '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/signup.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass SignupComponent extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.showPassword = this.showPassword.bind(this);\n\t\tthis.state = {\n\t\t\tfields: {},\n\t\t\terrors: {},\n\t\t\thidden: true,\n\t\t\tredirect: false,\n\t\t\taccounts: []\n\t\t};\n\t}\n\n\n\n\n\tcomponentDidMount() {\n\t\tfetch('http://localhost:3001/signup/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => { return { accounts: data.info } }\n\t\t\t\t)\n\t\t\t});\n\t}\n\n\tgetData() {\n\t\tfetch('http://localhost:3001/signup/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => { return { accounts: data } }  // I added the .info to data.info\n\t\t\t\t)\n\t\t\t});\n\t}\n\n\tpostData(event) {\n\t\tevent.preventDefault();\n\t\tconsole.log(\"here\");\n\t\tlet fields = this.state.fields;\n\t\t// let data = { email: \"Joe\", password: \"Hi\" };\n\n\t\tlet data = { email: fields[\"email\"], password: fields[\"password\"] };\n\t\tlet options = {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}\n\t\tfetch('http://localhost:3001/signup/', options);\n\t}\n\n\thandleChange(field, e) {\n\t\tlet fields = this.state.fields;\n\t\tfields[field] = e.target.value;\n\t\tthis.setState({ fields });\n\t}\n\n\n\n\thandleValidation() {\n\t\tlet fields = this.state.fields;\n\t\tlet errors = {};\n\t\tlet formIsValid = true;\n\t\tthis.getData();\n\n\t\tconst name_filter = /^[a-zA-Z]+$/;\n\t\tconst email_filter = /^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/;\n\n\n\n\t\tif (!fields[\"name\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"name\"] = \"Cannot be empty\";\n\t\t}\n\n\t\tif (typeof fields[\"name\"] !== \"undefined\") {\n\t\t\tif (!name_filter.test(fields[\"name\"])) {\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[\"name\"] = \"Please enter a valid first name!\";\n\n\t\t\t\talert(\"Please enter a valid first name!\");\n\t\t\t}\n\t\t}\n\n\t\t// Email\n\t\tif (!fields[\"email\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"email\"] = \"Cannot be empty\";\n\t\t}\n\n\t\tif (typeof fields[\"email\"] !== \"undefined\") {\n\t\t\tif (!email_filter.test(fields[\"email\"])) {\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[\"email\"] = \"Please enter a valid email!\";\n\n\t\t\t\talert(\"Please enter a valid email!\");\n\t\t\t}\n\t\t}\n\n\t\tfor (var i = 0; i < this.state.accounts.length; i++) {\n\t\t\tif (this.state.accounts[i].email === fields[\"email\"]) {\n\t\t\t\tformIsValid = false;\n\t\t\t\talert(\"Sorry but this email has already been taken!\")\n\t\t\t}\n\t\t}\n\n\n\t\t// Password & confirm password\n\t\tif (!fields[\"password\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"password\"] = \"Cannot be empty\";\n\t\t}\n\t\tif (!fields[\"confirm_password\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"confirm_password\"] = \"Cannot be empty\";\n\t\t}\n\n\t\tif (typeof fields[\"password\"] !== \"undefined\" || typeof fields[\"confirm_password\"] !== \"undefined\") {\n\t\t\tif (fields[\"password\"] !== fields[\"confirm_password\"]) {\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[\"password\"] = \"Password and Confirm Password don't Match!\";\n\t\t\t\terrors[\"confirm_password\"] = \"Password and Confirm Password don't Match!\";\n\t\t\t\talert(\"Password and Confirm Password Don't Match!\");\n\t\t\t\tthis.clearFunc();\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ errors: errors });\n\t\treturn formIsValid;\n\t}\n\n\tcontactSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif (this.handleValidation()) {\n\t\t\tthis.postData(e);\n\t\t\twindow.location = \"./home.js\";\n\t\t\talert(\"Thank you for signing up!\");\n\t\t}\n\n\t}\n\n\t// handleChange(field, e) {\n\t// \tlet fields = this.state.fields;\n\t// \tfields[field] = e.target.value;\n\t// \tthis.setState({ fields });\n\t// }\n\n\tclearFunc() {\n\t\tlet fields = this.state.fields;\n\n\t\tfields[\"password\"] = \"\";\n\t\tfields[\"confirm_password\"] = \"\";\n\n\t\tthis.setState({ fields: fields });\n\t}\n\n\tshowPassword() {\n\t\tthis.setState({ hidden: !this.state.hidden });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"main\">\n\t\t\t\t<div className=\"signup-form\" align=\"center\">\n\t\t\t\t\t<h2>Sign up</h2>\n\t\t\t\t\t<form action=\"./home.js\" onSubmit={this.contactSubmit.bind(this)} >\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref=\"name\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"First name\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"name\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"name\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"email\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"email\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"password\"\n\t\t\t\t\t\t\t\ttype={this.state.hidden ? 'password' : 'text'}\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"password\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"password\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"confirm_password\"\n\t\t\t\t\t\t\t\ttype={this.state.hidden ? 'password' : 'text'}\n\t\t\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"confirm_password\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"confirm_password\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-success btn-lg btn-block\" >Submit</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" onClick={this.showPassword} />Show Password\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"bot\">Already have an account? <a href=\"./login.js\">Sign in</a></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t// Sign up template, https://www.tutorialrepublic.com/snippets/preview.php?topic=bootstrap&file=sign-up-form-with-icons\n\t\t\t// I changed the formatting and added all my own regexp  \n\n\t\t\t// I used this for the showPassword function\n\t\t\t// https://edvins.io/show-and-hide-password-in-react\n\t\t)\n\n\t}\n}\n\nexport default SignupComponent;","/home/john/AlfaFinal/frontend/src/components/login.js",["94"],"import React, { Component } from 'react';\nimport '../App.css';\n// import $ from 'jquery';\nimport '../assets/css/login.css';\nimport '../assets/css/alfa_style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport avatar from \"../assets/images/avatar.jpg\";\n\n\nclass LoginComponent extends Component {\n  constructor() {\n    super();\n    this.showPassword = this.showPassword.bind(this);\n    this.state = {\n      fields: {},\n      errors: {},\n      hidden: true,\n      redirect: false,\n      accounts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3001/login/')\n      .then(res => res.json())\n      .then(data => {\n        this.setState(\n          (prevState) => { return { accounts: data.info } }\n        )\n      });\n  }\n\n  getData() {\n    fetch('http://localhost:3001/login/')\n      .then(res => res.json())\n      .then(data => {\n        console.log(data);\n        this.setState(\n          (prevState) => { return { accounts: data } }  // I added the .info to data.info\n        )\n      });\n  }\n\n  handleChange(field, e) {\n    let fields = this.state.fields;\n    fields[field] = e.target.value;\n    this.setState({ fields });\n  }\n\n\n\n  // componentDidMount() {\n  //   var id = this.getCookie(\"id\");\n  //   var pass = this.getCookie(\"pass\");\n\n  //   if (id && pass) {\n  //     document.getElementById(\"email\").value = id;\n  //     document.getElementById(\"password\").value = pass;\n  //     $(\"#myCheck\").prop(\"checked\", true);\n\n  //   } else {\n  //     this.deleteCookie(\"pass\");\n  //     this.deleteCookie(\"id\");\n  //     this.clearFunc();\n  //     $(\"#myCheck\").prop(\"checked\", false);\n  //   }\n  // }\n\n  //Reset input fields\n  clearFunc() {\n    let fields = this.state.fields;\n\n    fields[\"email\"] = \"\";\n    fields[\"password\"] = \"\";\n\n    this.setState({ fields: fields });\n  }\n\n  // Remember Input fields\n  setRememberChkBox() {\n    if (this.getCookie(\"id\") != null && this.getCookie(\"pass\") != null) {\n      this.deleteCookie(\"pass\");\n      this.deleteCookie(\"id\");\n      this.clearFunc();\n    }\n  }\n\n  // Show the password\n  showPassword() {\n    this.setState({ hidden: !this.state.hidden });\n  }\n\n  // delete individual cookies\n  deleteCookie(name) {\n    // Set expire to an older date\n    document.cookie = name + \"= ; expires = Thu, 01 Jan 1970 00:00:00 GMT; path=/\";\n  }\n\n  // Set individual cookies\n  setCookie(name, value, days) {\n    var expires = \"\";\n    if (days) {\n      var date = new Date();\n      date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));\n      expires = \"; expires=\" + date.toUTCString();\n    }\n    document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n  }\n\n  // Get individual cookies\n  getCookie(name) {\n    var nameEQ = name + \"=\";\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  }\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = false;\n    this.getData()\n\n    if (typeof fields[\"email\"] !== \"undefined\" || typeof fields[\"password\"] !== \"undefined\") {\n\n      this.state.accounts.map((account) => {\n        let em = account.email;\n        let pw = account.password;\n\n        if (fields[\"email\"] === em && fields[\"password\"] === pw) {\n          formIsValid = true;\n        } else {\n          formIsValid = false;\n        }\n      })\n    }\n\n    this.setState({ errors: errors });\n    return formIsValid;\n  }\n\n  contactSubmit(e) {\n    e.preventDefault();\n\n    if (this.handleValidation()) {\n      window.location = \"./home.js\";\n      alert(\"You have successfully logged in!\");\n    } else {\n      window.location = \"./login.js\";\n      alert(\"You have typed either the wrong email or password!\")\n    }\n\n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n        <div className=\"login-form\">\n          <h2>Sign in to Your Account</h2>\n          <form action=\"./home.js\" onSubmit={this.contactSubmit.bind(this)} >\n            <div className=\"text-center\" align=\"center\">\n              <img src={avatar} alt=\"./assets/images/avatar.jpg\" className=\"img-circle avatar\" />\n            </div>\n\n            <div className=\"form-group\" align=\"center\">\n              <input\n                ref=\"email\"\n                name=\"email\"\n                type=\"text\"\n                className=\"form-control\"\n                placeholder=\"Enter email\"\n                onChange={this.handleChange.bind(this, \"email\")}\n                value={this.state.fields[\"email\"]}\n                required=\"required\" />\n\n              <input\n                ref=\"password\"\n                name=\"password\"\n                type={this.state.hidden ? 'password' : 'text'}\n                className=\"form-control\"\n                placeholder=\"Enter password\"\n                onChange={this.handleChange.bind(this, \"password\")}\n                value={this.state.fields[\"password\"]}\n                required=\"required\" />\n            </div>\n\n            <div className=\"form-group\" align=\"center\">\n              <button type=\"submit\" className=\"btn btn-success btn-lg btn-block\" >Sign in</button>\n              {/* <button type=\"reset\" className=\"btn btn-primary btn-block\" >Reset</button> */}\n            </div>\n            <input type=\"checkbox\" onClick={this.showPassword} />Show Password\n            <br />\n            <input type=\"checkbox\" value=\"0\" onClick={this.setRememberChkBox()} id=\"myCheck\" />Remember\n          </form>\n          {/* <span><b className=\"valid\">User Name : guest@gmail.com<br />Password : guest</b></span> */}\n          <p className=\"text-center\" align=\"center\"><a href=\"change_password.js\">Change Account Password</a></p>\n\n          <p className=\"text-center\" align=\"center\"><a href=\"signup.js\">Create an Account</a></p>\n        </div>\n      </div >\n    );\n  }\n}\n\nexport default LoginComponent;","/home/john/AlfaFinal/frontend/src/components/home.js",[],"/home/john/AlfaFinal/frontend/src/components/alfa_parts.js",[],"/home/john/AlfaFinal/frontend/src/components/GTV6_parts.js",[],"/home/john/AlfaFinal/frontend/src/components/milano_parts.js",[],"/home/john/AlfaFinal/frontend/src/components/electrical.js",[],"/home/john/AlfaFinal/frontend/src/components/engine.js",[],"/home/john/AlfaFinal/frontend/src/components/brakes.js",[],"/home/john/AlfaFinal/frontend/src/js/footer.js",[],"/home/john/AlfaFinal/frontend/src/js/login.js",[],"/home/john/AlfaFinal/frontend/src/js/header.js",[],"/home/john/AlfaFinal/frontend/src/components/checkout.js",["95","96","97","98"],"import React, { Component } from 'react';\nimport '../assets/css/checkout.css';\nimport '../assets/css/alfa_style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass CheckoutComponent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            fields: {},\n            errors: {},\n            accounts2: []\n        };\n    }\n\n    handleChange(field, e) {\n        let fields = this.state.fields;\n        fields[field] = e.target.value;\n        this.setState({ fields });\n    }\n\n    handleValidation() {\n        let fields = this.state.fields;\n        let errors = {};\n        let formIsValid = true;\n\n        let cardholder_filter = /^([a-zA-Z\\.\\-])+\\s([a-zA-Z\\.\\-])+$/;\n        let expireM_filter = /^[0-9]{2}$/;\n        let expireY_filter = /^[0-9]{2}$/;\n        let cardnumber_filter = /^(([0-9]){16})|(([0-9]){4}\\s([0-9]){4}\\s([0-9]){4}\\s([0-9]){4})$/;\n        let cvv_filter = /^[0-9]{3}$/;\n\n\n        if (typeof fields[\"card-holder\"] !== \"undefined\") {\n            if (!cardholder_filter.test(fields[\"card-holder\"])) {\n                formIsValid = false;\n                errors[\"card-holder\"] = \"Invalid name for card holder!\";\n\n                alert(\"Please enter a valid card holder.\");\n                this.clearCH();\n            }\n        }\n\n        if (typeof fields[\"expireM\"] !== \"undefined\") {\n            if (!expireM_filter.test(fields[\"expireM\"])) {\n                formIsValid = false;\n                errors[\"expireM\"] = \"Please enter a valid expiration date.\";\n\n                alert(\"Please enter a valid expiration date.\");\n                this.clearExpire();\n            }\n        }\n\n        if (typeof fields[\"expireY\"] !== \"undefined\") {\n            if (!expireY_filter.test(fields[\"expireY\"])) {\n                formIsValid = false;\n                errors[\"expireY\"] = \"Please enter a valid expiration date.\";\n\n                alert(\"Please enter a valid expiration date.\");\n                this.clearExpire();\n            }\n        }\n\n        if (typeof fields[\"card-number\"] !== \"undefined\") {\n            if (!cardnumber_filter.test(fields[\"card-number\"])) {\n                formIsValid = false;\n                errors[\"card-number\"] = \"Please enter a valid card number.\";\n\n                alert(\"Please enter a valid card number.\");\n                this.clearCN();\n            }\n        }\n\n        if (typeof fields[\"cvv\"] !== \"undefined\") {\n            if (!cvv_filter.test(fields[\"cvv\"])) {\n                formIsValid = false;\n                errors[\"cvv\"] = \"Please enter a valid cvv!\";\n\n                alert(\"Please enter a valid cvv.\");\n                this.clearCVV();\n            }\n        }\n\n        this.setState({ errors: errors });\n        return formIsValid;\n    }\n\n    contactSubmit(e) {\n        e.preventDefault();\n\n        if (this.handleValidation()) {\n\n            if (this.state.accounts2.length === 0) {\n                alert(\"You don't have anything in your cart!\")\n                window.location = \"./home.js\";\n            } else {\n                this.delData();\n                window.location = \"./home.js\";\n                alert(\"Thank you for your purchase!\");\n            }\n        }\n    }\n\n    clearCH() {\n        let fields = this.state.fields;\n\n        fields[\"card-holder\"] = \"\";\n        this.setState({ fields: fields });\n    }\n\n    clearExpire() {\n        let fields = this.state.fields;\n\n        fields[\"expireM\"] = \"\";\n        fields[\"expireY\"] = \"\";\n\n        this.setState({ fields: fields });\n    }\n\n    clearCN() {\n        let fields = this.state.fields;\n\n        fields[\"card-number\"] = \"\";\n\n        this.setState({ fields: fields });\n    }\n\n    clearCVV() {\n        let fields = this.state.fields;\n\n        fields[\"cvv\"] = \"\";\n\n        this.setState({ fields: fields });\n    }\n\n\n    componentDidMount() {\n        fetch('http://localhost:3001/checkout/')\n            .then(res => res.json())\n            .then(data => {\n                this.setState(\n                    (prevState) => { return { accounts2: data.info } }\n                )\n            });\n    }\n\n    getData() {\n        fetch('http://localhost:3001/checkout/')\n            .then(res => res.json())\n            .then(data => {\n                console.log(data);\n                this.setState(\n                    (prevState) => { return { accounts2: data } }  // I added the .info to data.info\n                )\n            });\n    }\n\n    sum() {\n        let sums = 0;\n\n        for (var i = 0; i < this.state.accounts2.length; i++) {\n            sums += this.state.accounts2[i].price;\n        }\n\n        sums = sums * 100;\n        sums = sums / 100;\n\n        return sums;\n    }\n\n    delData() {\n        for (var i = 0; i < this.state.accounts2.length; i++) {\n            let data = { id: this.state.accounts2[i].id, description: this.state.accounts2[i].description, price: this.state.accounts2[i].price };\n            let options = {\n                method: 'delete',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(data)\n            }\n            fetch('http://localhost:3001/checkout/', options);\n        }\n    }\n\n    render() {\n        var mon = this.sum();\n\n        return (\n            <div className=\"main\" >\n                <main className=\"page payment-page\" style={{ marginTop: \"-1em\" }}>\n                    <section className=\"payment-form dark\">\n                        <div className=\"container\">\n                            <div className=\"block-heading\">\n                                <h2>Checkout</h2>\n                            </div>\n                            <form action=\"./index.js\" onSubmit={this.contactSubmit.bind(this)}>\n                                <div className=\"products\">\n                                    {this.state.accounts2.map((items) => <span key={items.id}>\n                                        <div className=\"item\">\n                                            <span className=\"price\">${items.price}</span>\n                                            <p className=\"item-name\">{items.description}</p>\n                                        </div>\n                                    </span>)}\n\n\n                                    <div className=\"total\">Total<span className=\"price\">${mon}</span></div>\n                                </div>\n                                <div className=\"card-details\">\n                                    <h3 className=\"t\">Credit Card Details</h3>\n                                    <div className=\"row\">\n                                        <div className=\"form-group col-sm-7\">\n                                            <label for=\"card-holder\">Card Holder</label>\n                                            <input\n                                                ref=\"card-holder\"\n                                                name=\"card-holder\"\n                                                id=\"card-holder\"\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Card Holder\"\n                                                onChange={this.handleChange.bind(this, \"card-holder\")}\n                                                value={this.state.fields[\"card-holder\"]}\n                                                aria-describedby=\"basic-addon1\"\n                                                aria-label=\"Card Holder\"\n                                                required=\"required\" />\n                                        </div>\n                                        <div className=\"form-group col-sm-5\">\n                                            <label for=\"\">Expiration Date</label>\n                                            <div className=\"input-group expiration-date\">\n                                                <input\n                                                    ref=\"expireM\"\n                                                    name=\"expireM\"\n                                                    id=\"expireM\"\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    placeholder=\"MM\"\n                                                    onChange={this.handleChange.bind(this, \"expireM\")}\n                                                    value={this.state.fields[\"expireM\"]}\n                                                    aria-describedby=\"basic-addon1\"\n                                                    aria-label=\"MM\"\n                                                    required=\"required\" />\n                                                <span className=\"date-separator\">/</span>\n                                                <input\n                                                    ref=\"expireY\"\n                                                    name=\"expireY\"\n                                                    id=\"expireY\"\n                                                    type=\"text\"\n                                                    className=\"form-control\"\n                                                    placeholder=\"YY\"\n                                                    onChange={this.handleChange.bind(this, \"expireY\")}\n                                                    value={this.state.fields[\"expireY\"]}\n                                                    aria-describedby=\"basic-addon1\"\n                                                    aria-label=\"YY\"\n                                                    required=\"required\" />\n                                            </div>\n                                        </div>\n                                        <div className=\"form-group col-sm-8\" >\n                                            <label for=\"card-number\">Card Number</label>\n                                            <input\n                                                ref=\"card-number\"\n                                                name=\"card-number\"\n                                                id=\"card-number\"\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"Card Number\"\n                                                onChange={this.handleChange.bind(this, \"card-number\")}\n                                                value={this.state.fields[\"card-number\"]}\n                                                aria-describedby=\"basic-addon1\"\n                                                aria-label=\"card-number\"\n                                                required=\"required\" />\n                                        </div>\n                                        <div className=\"form-group col-sm-4\" >\n                                            <label for=\"cvv\">CVV</label>\n                                            <input\n                                                ref=\"cvv\"\n                                                name=\"cvv\"\n                                                id=\"cvv\"\n                                                type=\"text\"\n                                                className=\"form-control\"\n                                                placeholder=\"CVV\"\n                                                onChange={this.handleChange.bind(this, \"cvv\")}\n                                                value={this.state.fields[\"cvv\"]}\n                                                aria-describedby=\"basic-addon1\"\n                                                aria-label=\"cvv\"\n                                                required=\"required\" />\n                                        </div>\n                                        <div className=\"form-group col-sm-12\">\n                                            <button type=\"submit\" className=\"btn btn-success btn-lg btn-block\">Submit</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </section>\n                </main>\n            </div>\n            //  Bootstrap template, https://tutorialzine.com/2018/02/freebie-4-beautiful-checkout-forms\n            //  I added all the regexp and changed som minor aspects of the code around. \n        )\n    }\n}\n\nexport default CheckoutComponent;","/home/john/AlfaFinal/frontend/src/components/mechanics.js",[],"/home/john/AlfaFinal/frontend/src/components/change_password.js",["99"],"import React, { Component } from 'react';\nimport '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/login.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport avatar from \"../assets/images/avatar.jpg\";\n\n\nclass PasswordComponent extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.showPassword = this.showPassword.bind(this);\n\t\tthis.state = {\n\t\t\tfields: {},\n\t\t\terrors: {},\n\t\t\thidden: true,\n\t\t\tredirect: false,\n\t\t\taccounts: []\n\t\t};\n\t}\n\n\n\tcomponentDidMount() {\n\t\tfetch('http://localhost:3001/change_password/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => { return { accounts: data.info } }\n\t\t\t\t)\n\t\t\t});\n\t}\n\n\t// postData(event) {\n\t// \tevent.preventDefault();\n\t// \tlet fields = this.state.fields;\n\n\t// \tlet data = { email: fields[\"email\"], password: fields[\"password\"] };\n\t// \tlet options = {\n\t// \t\tmethod: 'post',\n\t// \t\theaders: {\n\t// \t\t\t'Content-Type': 'application/json'\n\t// \t\t},\n\t// \t\tbody: JSON.stringify(data)\n\t// \t}\n\t// \tfetch('http://localhost:3001/change_password/', options);\n\t// }\n\n\t// delData() {\n\t//   let data = { brand: this.state.delBrand, model: this.state.delModel, year: this.state.delYear };\n\t//   let options = {\n\t//     method: 'delete',\n\t//     headers: {\n\t//       'Content-Type': 'application/json'\n\t//     },\n\t//     body: JSON.stringify(data)\n\t//   }\n\t//   fetch('http://localhost:3001/dealership/', options);\n\t// }\n\n\tupdateData() {\n\t\tlet fields = this.state.fields;\n\t\tlet data = { email: fields[\"email\"], password: fields[\"password\"] };\n\n\t\t// let data = { brand: this.state.updateBrand, model: this.state.updateModel, year: this.state.updateYear, id: this.state.updateID };\n\t\tlet options = {\n\t\t\tmethod: 'put',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}\n\t\tfetch('http://localhost:3001/change_password/', options);\n\t}\n\n\tgetData() {\n\t\tfetch('http://localhost:3001/change_password/')\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(data);\n\t\t\t\tthis.setState(\n\t\t\t\t\t(prevState) => { return { accounts: data } }  // I added the .info to data.info\n\t\t\t\t)\n\t\t\t});\n\t}\n\n\t// handleChange(event) {\n\t//   this.setState({ [event.target.name]: event.target.value });\n\t// }\n\n\n\thandleChange(field, e) {\n\t\tlet fields = this.state.fields;\n\t\tfields[field] = e.target.value;\n\t\tthis.setState({ fields });\n\t}\n\n\n\n\thandleValidation() {\n\t\tlet fields = this.state.fields;\n\t\tlet errors = {};\n\t\tlet formIsValid = true;\n\t\tthis.getData()\n\n\t\t// Checking to see if the account is in the database\n\t\tif (typeof fields[\"email\"] !== \"undefined\" || typeof fields[\"oldPassword\"] !== \"undefined\") {\n\n\t\t\tthis.state.accounts.map((account) => {\n\t\t\t\tlet em = account.email;\n\t\t\t\tlet pw = account.password;\n\n\t\t\t\tif (fields[\"email\"] === em && fields[\"oldPassword\"] === pw) {\n\t\t\t\t\tformIsValid = true;\n\t\t\t\t} else {\n\t\t\t\t\tformIsValid = false;\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (formIsValid === false) {\n\t\t\t\talert(\"This account doesn't appear to exist!\");\n\t\t\t}\n\t\t}\n\n\t\t// Password & confirm password\n\t\tif (!fields[\"password\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"password\"] = \"Cannot be empty\";\n\t\t}\n\t\tif (!fields[\"confirm_password\"]) {\n\t\t\tformIsValid = false;\n\t\t\terrors[\"confirm_password\"] = \"Cannot be empty\";\n\t\t}\n\n\t\tif (typeof fields[\"password\"] !== \"undefined\" || typeof fields[\"confirm_password\"] !== \"undefined\") {\n\t\t\tif (fields[\"password\"] !== fields[\"confirm_password\"]) {\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[\"password\"] = \"Password and Confirm Password don't Match!\";\n\t\t\t\terrors[\"confirm_password\"] = \"Password and Confirm Password don't Match!\";\n\t\t\t\talert(\"New Password and Confirm New Password Don't Match!\");\n\t\t\t\tthis.clearFunc();\n\t\t\t}\n\t\t}\n\n\t\tthis.setState({ errors: errors });\n\t\treturn formIsValid;\n\t}\n\n\tcontactSubmit(e) {\n\t\te.preventDefault();\n\n\t\tif (this.handleValidation()) {\n\t\t\tthis.updateData();\n\t\t\twindow.location = \"./login.js\";\n\t\t\talert(\"You have successfully changed your password!\");\n\t\t}\n\t}\n\n\tclearFunc() {\n\t\tlet fields = this.state.fields;\n\n\t\tfields[\"password\"] = \"\";\n\t\tfields[\"confirm_password\"] = \"\";\n\n\t\tthis.setState({ fields: fields });\n\t}\n\n\tshowPassword() {\n\t\tthis.setState({ hidden: !this.state.hidden });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div id=\"main\">\n\t\t\t\t<div className=\"login-form\" align=\"center\">\n\t\t\t\t\t<h2>Change Account Password</h2>\n\t\t\t\t\t<form action=\"./home.js\" onSubmit={this.contactSubmit.bind(this)} >\n\t\t\t\t\t\t<div className=\"text-center\" align=\"center\">\n\t\t\t\t\t\t\t<img src={avatar} alt=\"./assets/images/avatar.jpg\" className=\"img-circle avatar\" />\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"email\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"email\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"email\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\tref=\"oldPassword\"\n\t\t\t\t\t\t\t\tname=\"oldPassword\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tplaceholder=\"Old Password\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"oldPassword\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"oldPassword\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"password\"\n\t\t\t\t\t\t\t\ttype={this.state.hidden ? 'password' : 'text'}\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tplaceholder=\"New Password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"password\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"password\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trefs=\"confirm_password\"\n\t\t\t\t\t\t\t\ttype={this.state.hidden ? 'password' : 'text'}\n\t\t\t\t\t\t\t\tname=\"confirm_password\"\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm New Password\"\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\tonChange={this.handleChange.bind(this, \"confirm_password\")}\n\t\t\t\t\t\t\t\tvalue={this.state.fields[\"confirm_password\"]}\n\t\t\t\t\t\t\t\trequired=\"required\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<button type=\"submit\" className=\"btn btn-success btn-lg btn-block\" >Change</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t<input type=\"checkbox\" onClick={this.showPassword} />Show Password\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"bot\">Already have an account? <a href=\"./login.js\">Sign in</a></div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t// Sign up template, https://www.tutorialrepublic.com/snippets/preview.php?topic=bootstrap&file=sign-up-form-with-icons\n\t\t\t// I changed the formatting and added all my own regexp  \n\n\t\t\t// I used this for the showPassword function\n\t\t\t// https://edvins.io/show-and-hide-password-in-react\n\t\t)\n\n\t}\n}\n\nexport default PasswordComponent;","/home/john/AlfaFinal/frontend/src/components/cart.js",[],"/home/john/AlfaFinal/frontend/src/components/tweets.js",["100"],"import React, { Component } from 'react';\n// import '../App.css';\nimport '../assets/css/alfa_style.css';\nimport '../assets/css/signup.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nvar Twitter = require('twitter');\nconst express = require('express');\nconst server = express();\nserver.use(express.json());\n\nvar client = new Twitter({\n    consumer_key: 'kJCHFwe6tK2mun5eHiZacFrlO',\n    consumer_secret: '7aPQt2dayjANxGWblcJdrzrNEkHYfMY1UgVmM1XLLfJKzG228g',\n    bearer_token: 'AAAAAAAAAAAAAAAAAAAAAOWGOQEAAAAAJwCs06VN8gZH55quJSFxHY4u86U%3DA6rzoVv0VS7rIavStklsqknNoqADTth6jLRa8XBlyED0QsR39O'\n});\n\nclass TwitterComponent extends Component {\n    constructor() {\n        super();\n        this.state = {\n            accounts: []\n        };\n    }\n\n\n\n}\n\nexport default TwitterComponent;\n\n\n\nlet searchParam = { q: 'auto repair', count: 5 };\nclient.get('search/tweets', searchParam, function (error, data, response) {\n    if (error) {\n        console.log(\"Didn't work!\")\n    } else {\n        let statuses = data.statuses;\n        for (let i=0; i<50;i++){\n            console.log(statuses[i].text)\n        }\n        // statuses.map((el)=>{console.log(el.text)})\n        // console.log(statuses);\n    }\n})\n\n\n// client.get('search/tweets', searchParam, function (error, data, response) {\n\n// let searchParam = { q: 'hat', count: 50 };\n\n// server.get('/api/tweets/:auto%20repair', function (request, response) {\n//     var keyword = request.params.keyword;\n//     client.get('search/tweets', { q: keyword, count: 50 }, function (error, data, response) {\n//         if (error) {\n//             console.log(\"Didn't work!\")\n//         } else {\n//             let statuses = data.statuses;\n//             for (let i = 0; i < 50; i++) {\n//                 console.log(statuses[i].text)\n//             }\n//         }\n//     })\n// });\n\n// server.listen(5000, () => {\n//     console.log(\"Connected to port 5000!\");\n// });",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":76,"column":38,"nodeType":"107","messageId":"108","endLine":76,"endColumn":39,"suggestions":"109"},{"ruleId":"105","severity":1,"message":"110","line":76,"column":40,"nodeType":"107","messageId":"108","endLine":76,"endColumn":41,"suggestions":"111"},{"ruleId":"105","severity":1,"message":"112","line":76,"column":45,"nodeType":"107","messageId":"108","endLine":76,"endColumn":46,"suggestions":"113"},{"ruleId":"105","severity":1,"message":"110","line":76,"column":59,"nodeType":"107","messageId":"108","endLine":76,"endColumn":60,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":130,"column":41,"nodeType":"117","messageId":"118","endLine":130,"endColumn":43},{"ruleId":"105","severity":1,"message":"106","line":27,"column":43,"nodeType":"107","messageId":"108","endLine":27,"endColumn":44,"suggestions":"119"},{"ruleId":"105","severity":1,"message":"110","line":27,"column":45,"nodeType":"107","messageId":"108","endLine":27,"endColumn":46,"suggestions":"120"},{"ruleId":"105","severity":1,"message":"106","line":27,"column":60,"nodeType":"107","messageId":"108","endLine":27,"endColumn":61,"suggestions":"121"},{"ruleId":"105","severity":1,"message":"110","line":27,"column":62,"nodeType":"107","messageId":"108","endLine":27,"endColumn":63,"suggestions":"122"},{"ruleId":"115","severity":1,"message":"116","line":108,"column":38,"nodeType":"117","messageId":"118","endLine":108,"endColumn":40},{"ruleId":"123","severity":1,"message":"124","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["129","130"],"Unnecessary escape character: \\-.",["131","132"],"Unnecessary escape character: \\@.",["133","134"],["135","136"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["137","138"],["139","140"],["141","142"],["143","144"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"145","fix":"146","desc":"147"},{"messageId":"148","fix":"149","desc":"150"},{"messageId":"145","fix":"151","desc":"147"},{"messageId":"148","fix":"152","desc":"150"},{"messageId":"145","fix":"153","desc":"147"},{"messageId":"148","fix":"154","desc":"150"},{"messageId":"145","fix":"155","desc":"147"},{"messageId":"148","fix":"156","desc":"150"},{"messageId":"145","fix":"157","desc":"147"},{"messageId":"148","fix":"158","desc":"150"},{"messageId":"145","fix":"159","desc":"147"},{"messageId":"148","fix":"160","desc":"150"},{"messageId":"145","fix":"161","desc":"147"},{"messageId":"148","fix":"162","desc":"150"},{"messageId":"145","fix":"163","desc":"147"},{"messageId":"148","fix":"164","desc":"150"},"removeEscape",{"range":"165","text":"166"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"167","text":"168"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"169","text":"166"},{"range":"170","text":"168"},{"range":"171","text":"166"},{"range":"172","text":"168"},{"range":"173","text":"166"},{"range":"174","text":"168"},{"range":"175","text":"166"},{"range":"176","text":"168"},{"range":"177","text":"166"},{"range":"178","text":"168"},{"range":"179","text":"166"},{"range":"180","text":"168"},{"range":"181","text":"166"},{"range":"182","text":"168"},[1598,1599],"",[1598,1598],"\\",[1600,1601],[1600,1600],[1605,1606],[1605,1605],[1619,1620],[1619,1619],[678,679],[678,678],[680,681],[680,680],[695,696],[695,695],[697,698],[697,697]]